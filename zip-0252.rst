::

  ZIP: 252
  Title: Deployment of the NU5 Network Upgrade
  Owners: Daira Hopwood <daira@electriccoin.co>, teor <teor@zfnd.org>
  Status: Draft
  Category: Consensus / Network
  Created: 2021-02-23
  License: MIT


Terminology
===========

The key words "MUST", "MUST NOT", "SHOULD", and "MAY" in this document are to be
interpreted as described in RFC 2119. [#RFC2119]_

The term "network upgrade" in this document is to be interpreted as described in
ZIP 200. [#zip-0200]_

The terms "Testnet" and "Mainnet" are to be interpreted as described in
section 3.11 of the Zcash Protocol Specification [#protocol-networks]_.

NU5 is the code-name for the sixth Zcash network upgrade, also known as
Network Upgrade 5.


Abstract
========

This proposal defines the deployment of the NU5 network upgrade.


Specification
=============

NU5 deployment
-----------------

The primary sources of information about NU5 consensus protocol changes are:

- The Zcash Protocol Specification [#protocol]_
- ZIP 200: Network Upgrade Mechanism [#zip-0200]_
- ZIP 207: Funding Streams [#zip-0207]_
- ZIP 211: Disabling Addition of New Value to the Sprout Value Pool [#zip-0211]_
- ZIP 212: Allow Recipient to Derive Sapling Ephemeral Secret from Note Plaintext [#zip-0212]_
- ZIP 214: Consensus rules for a Zcash Development Fund [#zip-0214]_
- ZIP 215: Explicitly Defining and Modifying Ed25519 Validation Rules [#zip-0215]_
- ZIP 1014: Establishing a Dev Fund for ECC, ZF, and Major Grants [#zip-1014]_.

The network handshake and peer management mechanisms defined in ZIP 201 [#zip-0201]_
also apply to this upgrade.


The following network upgrade constants [#zip-0200]_ are defined for the NU5
upgrade:

CONSENSUS_BRANCH_ID
  ``0xE9FF75A6``


ACTIVATION_HEIGHT (NU5)
  Testnet: 1028500

  Mainnet: 1046400


Nodes compatible with NU5 activation on testnet MUST advertise protocol version
170012 or later. Nodes compatible with NU5 activation on mainnet MUST advertise
protocol version 170013 or later. The minimum peer protocol version that
NU5-compatible nodes will connect to is 170002.

Pre-NU5 testnet nodes are defined as nodes on testnet advertising a protocol
version less than 170012. Pre-NU5 mainnet nodes are defined as nodes on mainnet
advertising a protocol version less than 170013.

For each network (testnet and mainnet), approximately 1.5 days (defined in terms of
block height) before the corresponding NU5 activation height, nodes compatible
with NU5 activation on that network will change the behaviour of their peer
connection logic in order to prefer pre-NU5 peers on that network for eviction
from the set of peer connections::

    /**
     * The period before a network upgrade activates, where connections to upgrading peers are preferred (in blocks).
     * This was three days for upgrades up to and including Blossom, and is 1.5 days from Heartwood onward.
     */
    static const int NETWORK_UPGRADE_PEER_PREFERENCE_BLOCK_PERIOD = 1728;

The implementation is similar to that for Overwinter which was described in
[#zip-0201]_.

Once NU5 activates on testnet or mainnet, NU5 nodes SHOULD take steps to:

- reject new connections from pre-NU5 nodes on that network;
- disconnect any existing connections to pre-NU5 nodes on that network.


Backward compatibility
======================

Prior to the network upgrade activating on each network, NU5 and pre-NU5
nodes are compatible and can connect to each other. However, NU5 nodes will
have a preference for connecting to other NU5 nodes, so pre-NU5 nodes will
gradually be disconnected in the run up to activation.

Once the network upgrades, even though pre-NU5 nodes can still accept the
numerically larger protocol version used by NU5 as being valid, NU5 nodes
will always disconnect peers using lower protocol versions.

Unlike Overwinter and Sapling, and like Blossom and Heartwood, NU5 does not
define a new transaction version. NU5 transactions are therefore in the same
v4 format as Sapling transactions; use the same version group ID, i.e. 0x892F2085
as defined in [#protocol-txnencodingandconsensus]_; and use the same transaction digest
algorithm as defined in [#zip-0243]_. This does not imply that transactions are
valid across the NU5 activation, since signatures MUST use the appropriate
consensus branch ID. [#zip-0243]_


Support in zcashd
=================

Support for NU5 on testnet will be implemented in ``zcashd`` version 3.1.0, which
will advertise protocol version 170012. Support for NU5 on mainnet will be implemented
in ``zcashd`` version 4.0.0, which will advertise protocol version 170013.


References
==========

.. [#RFC2119] `RFC 2119: Key words for use in RFCs to Indicate Requirement Levels <https://www.rfc-editor.org/rfc/rfc2119.html>`_
.. [#protocol] `Zcash Protocol Specification, Version 2020.1.15 or later <protocol/canopy.pdf>`_
.. [#protocol-networks] `Zcash Protocol Specification, Version 2020.1.15. Section 3.11: Mainnet and Testnet <protocol/canopy.pdf#networks>`_
.. [#protocol-txnencodingandconsensus] `Zcash Protocol Specification, Version 2020.1.15. Section 7.1: Transaction Encoding and Consensus <protocol/canopy.pdf#txnencodingandconsensus>`_
.. [#zip-0200] `ZIP 200: Network Upgrade Activation Mechanism <zip-0200.rst>`_
.. [#zip-0201] `ZIP 201: Network Peer Management for Overwinter <zip-0201.rst>`_
.. [#zip-0207] `ZIP 207: Funding Streams <zip-0207.rst>`_
.. [#zip-0211] `ZIP 211: Disabling Addition of New Value to the Sprout Value Pool <zip-0211.rst>`_
.. [#zip-0212] `ZIP 212: Allow Recipient to Derive Sapling Ephemeral Secret from Note Plaintext <zip-0212.rst>`_
.. [#zip-0214] `ZIP 214: Consensus rules for a Zcash Development Fund <zip-0214.rst>`_
.. [#zip-0215] `ZIP 215: Explicitly Defining and Modifying Ed25519 Validation Rules <zip-0215.rst>`_
.. [#zip-0243] `ZIP 243: Transaction Signature Validation for Sapling <zip-0243.rst>`_
.. [#zip-1014] `ZIP 1014: Establishing a Dev Fund for ECC, ZF, and Major Grants <zip-1014.rst>`_
